import * as _m0 from "protobufjs/minimal";
import { isSet } from "@osmonauts/helpers";
/** Params defines the parameters for the x/deployment package */

function createBaseParams() {
  return {
    inflationDecayFactor: "",
    initialInflation: "",
    variance: ""
  };
}

export const Params = {
  encode(message, writer = _m0.Writer.create()) {
    if (message.inflationDecayFactor !== "") {
      writer.uint32(10).string(message.inflationDecayFactor);
    }

    if (message.initialInflation !== "") {
      writer.uint32(18).string(message.initialInflation);
    }

    if (message.variance !== "") {
      writer.uint32(26).string(message.variance);
    }

    return writer;
  },

  decode(input, length) {
    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseParams();

    while (reader.pos < end) {
      const tag = reader.uint32();

      switch (tag >>> 3) {
        case 1:
          message.inflationDecayFactor = reader.string();
          break;

        case 2:
          message.initialInflation = reader.string();
          break;

        case 3:
          message.variance = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  },

  fromJSON(object) {
    return {
      inflationDecayFactor: isSet(object.inflationDecayFactor) ? String(object.inflationDecayFactor) : "",
      initialInflation: isSet(object.initialInflation) ? String(object.initialInflation) : "",
      variance: isSet(object.variance) ? String(object.variance) : ""
    };
  },

  toJSON(message) {
    const obj = {};
    message.inflationDecayFactor !== undefined && (obj.inflationDecayFactor = message.inflationDecayFactor);
    message.initialInflation !== undefined && (obj.initialInflation = message.initialInflation);
    message.variance !== undefined && (obj.variance = message.variance);
    return obj;
  },

  fromPartial(object) {
    const message = createBaseParams();
    message.inflationDecayFactor = object.inflationDecayFactor ?? "";
    message.initialInflation = object.initialInflation ?? "";
    message.variance = object.variance ?? "";
    return message;
  }

};