"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.QueryGroupResponse = exports.QueryGroupRequest = exports.QueryDeploymentsResponse = exports.QueryDeploymentsRequest = exports.QueryDeploymentResponse = exports.QueryDeploymentRequest = void 0;

var _deployment = require("./deployment");

var _pagination = require("../../../cosmos/base/query/v1beta1/pagination");

var _groupid = require("./groupid");

var _group = require("./group");

var _types = require("../../escrow/v1beta2/types");

var _m0 = _interopRequireWildcard(require("protobufjs/minimal"));

var _helpers = require("@osmonauts/helpers");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function createBaseQueryDeploymentsRequest() {
  return {
    filters: undefined,
    pagination: undefined
  };
}

var QueryDeploymentsRequest = {
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();

    if (message.filters !== undefined) {
      _deployment.DeploymentFilters.encode(message.filters, writer.uint32(10).fork()).ldelim();
    }

    if (message.pagination !== undefined) {
      _pagination.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();
    }

    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseQueryDeploymentsRequest();

    while (reader.pos < end) {
      var tag = reader.uint32();

      switch (tag >>> 3) {
        case 1:
          message.filters = _deployment.DeploymentFilters.decode(reader, reader.uint32());
          break;

        case 2:
          message.pagination = _pagination.PageRequest.decode(reader, reader.uint32());
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  },
  fromJSON: function fromJSON(object) {
    return {
      filters: (0, _helpers.isSet)(object.filters) ? _deployment.DeploymentFilters.fromJSON(object.filters) : undefined,
      pagination: (0, _helpers.isSet)(object.pagination) ? _pagination.PageRequest.fromJSON(object.pagination) : undefined
    };
  },
  toJSON: function toJSON(message) {
    var obj = {};
    message.filters !== undefined && (obj.filters = message.filters ? _deployment.DeploymentFilters.toJSON(message.filters) : undefined);
    message.pagination !== undefined && (obj.pagination = message.pagination ? _pagination.PageRequest.toJSON(message.pagination) : undefined);
    return obj;
  },
  fromPartial: function fromPartial(object) {
    var message = createBaseQueryDeploymentsRequest();
    message.filters = object.filters !== undefined && object.filters !== null ? _deployment.DeploymentFilters.fromPartial(object.filters) : undefined;
    message.pagination = object.pagination !== undefined && object.pagination !== null ? _pagination.PageRequest.fromPartial(object.pagination) : undefined;
    return message;
  }
};
exports.QueryDeploymentsRequest = QueryDeploymentsRequest;

function createBaseQueryDeploymentsResponse() {
  return {
    deployments: [],
    pagination: undefined
  };
}

var QueryDeploymentsResponse = {
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();

    var _iterator = _createForOfIteratorHelper(message.deployments),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var v = _step.value;
        QueryDeploymentResponse.encode(v, writer.uint32(10).fork()).ldelim();
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }

    if (message.pagination !== undefined) {
      _pagination.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
    }

    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseQueryDeploymentsResponse();

    while (reader.pos < end) {
      var tag = reader.uint32();

      switch (tag >>> 3) {
        case 1:
          message.deployments.push(QueryDeploymentResponse.decode(reader, reader.uint32()));
          break;

        case 2:
          message.pagination = _pagination.PageResponse.decode(reader, reader.uint32());
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  },
  fromJSON: function fromJSON(object) {
    return {
      deployments: Array.isArray(object === null || object === void 0 ? void 0 : object.deployments) ? object.deployments.map(function (e) {
        return QueryDeploymentResponse.fromJSON(e);
      }) : [],
      pagination: (0, _helpers.isSet)(object.pagination) ? _pagination.PageResponse.fromJSON(object.pagination) : undefined
    };
  },
  toJSON: function toJSON(message) {
    var obj = {};

    if (message.deployments) {
      obj.deployments = message.deployments.map(function (e) {
        return e ? QueryDeploymentResponse.toJSON(e) : undefined;
      });
    } else {
      obj.deployments = [];
    }

    message.pagination !== undefined && (obj.pagination = message.pagination ? _pagination.PageResponse.toJSON(message.pagination) : undefined);
    return obj;
  },
  fromPartial: function fromPartial(object) {
    var _object$deployments;

    var message = createBaseQueryDeploymentsResponse();
    message.deployments = ((_object$deployments = object.deployments) === null || _object$deployments === void 0 ? void 0 : _object$deployments.map(function (e) {
      return QueryDeploymentResponse.fromPartial(e);
    })) || [];
    message.pagination = object.pagination !== undefined && object.pagination !== null ? _pagination.PageResponse.fromPartial(object.pagination) : undefined;
    return message;
  }
};
exports.QueryDeploymentsResponse = QueryDeploymentsResponse;

function createBaseQueryDeploymentRequest() {
  return {
    id: undefined
  };
}

var QueryDeploymentRequest = {
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();

    if (message.id !== undefined) {
      _deployment.DeploymentID.encode(message.id, writer.uint32(10).fork()).ldelim();
    }

    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseQueryDeploymentRequest();

    while (reader.pos < end) {
      var tag = reader.uint32();

      switch (tag >>> 3) {
        case 1:
          message.id = _deployment.DeploymentID.decode(reader, reader.uint32());
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  },
  fromJSON: function fromJSON(object) {
    return {
      id: (0, _helpers.isSet)(object.id) ? _deployment.DeploymentID.fromJSON(object.id) : undefined
    };
  },
  toJSON: function toJSON(message) {
    var obj = {};
    message.id !== undefined && (obj.id = message.id ? _deployment.DeploymentID.toJSON(message.id) : undefined);
    return obj;
  },
  fromPartial: function fromPartial(object) {
    var message = createBaseQueryDeploymentRequest();
    message.id = object.id !== undefined && object.id !== null ? _deployment.DeploymentID.fromPartial(object.id) : undefined;
    return message;
  }
};
exports.QueryDeploymentRequest = QueryDeploymentRequest;

function createBaseQueryDeploymentResponse() {
  return {
    deployment: undefined,
    groups: [],
    escrowAccount: undefined
  };
}

var QueryDeploymentResponse = {
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();

    if (message.deployment !== undefined) {
      _deployment.Deployment.encode(message.deployment, writer.uint32(10).fork()).ldelim();
    }

    var _iterator2 = _createForOfIteratorHelper(message.groups),
        _step2;

    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var v = _step2.value;

        _group.Group.encode(v, writer.uint32(18).fork()).ldelim();
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }

    if (message.escrowAccount !== undefined) {
      _types.Account.encode(message.escrowAccount, writer.uint32(26).fork()).ldelim();
    }

    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseQueryDeploymentResponse();

    while (reader.pos < end) {
      var tag = reader.uint32();

      switch (tag >>> 3) {
        case 1:
          message.deployment = _deployment.Deployment.decode(reader, reader.uint32());
          break;

        case 2:
          message.groups.push(_group.Group.decode(reader, reader.uint32()));
          break;

        case 3:
          message.escrowAccount = _types.Account.decode(reader, reader.uint32());
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  },
  fromJSON: function fromJSON(object) {
    return {
      deployment: (0, _helpers.isSet)(object.deployment) ? _deployment.Deployment.fromJSON(object.deployment) : undefined,
      groups: Array.isArray(object === null || object === void 0 ? void 0 : object.groups) ? object.groups.map(function (e) {
        return _group.Group.fromJSON(e);
      }) : [],
      escrowAccount: (0, _helpers.isSet)(object.escrowAccount) ? _types.Account.fromJSON(object.escrowAccount) : undefined
    };
  },
  toJSON: function toJSON(message) {
    var obj = {};
    message.deployment !== undefined && (obj.deployment = message.deployment ? _deployment.Deployment.toJSON(message.deployment) : undefined);

    if (message.groups) {
      obj.groups = message.groups.map(function (e) {
        return e ? _group.Group.toJSON(e) : undefined;
      });
    } else {
      obj.groups = [];
    }

    message.escrowAccount !== undefined && (obj.escrowAccount = message.escrowAccount ? _types.Account.toJSON(message.escrowAccount) : undefined);
    return obj;
  },
  fromPartial: function fromPartial(object) {
    var _object$groups;

    var message = createBaseQueryDeploymentResponse();
    message.deployment = object.deployment !== undefined && object.deployment !== null ? _deployment.Deployment.fromPartial(object.deployment) : undefined;
    message.groups = ((_object$groups = object.groups) === null || _object$groups === void 0 ? void 0 : _object$groups.map(function (e) {
      return _group.Group.fromPartial(e);
    })) || [];
    message.escrowAccount = object.escrowAccount !== undefined && object.escrowAccount !== null ? _types.Account.fromPartial(object.escrowAccount) : undefined;
    return message;
  }
};
exports.QueryDeploymentResponse = QueryDeploymentResponse;

function createBaseQueryGroupRequest() {
  return {
    id: undefined
  };
}

var QueryGroupRequest = {
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();

    if (message.id !== undefined) {
      _groupid.GroupID.encode(message.id, writer.uint32(10).fork()).ldelim();
    }

    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseQueryGroupRequest();

    while (reader.pos < end) {
      var tag = reader.uint32();

      switch (tag >>> 3) {
        case 1:
          message.id = _groupid.GroupID.decode(reader, reader.uint32());
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  },
  fromJSON: function fromJSON(object) {
    return {
      id: (0, _helpers.isSet)(object.id) ? _groupid.GroupID.fromJSON(object.id) : undefined
    };
  },
  toJSON: function toJSON(message) {
    var obj = {};
    message.id !== undefined && (obj.id = message.id ? _groupid.GroupID.toJSON(message.id) : undefined);
    return obj;
  },
  fromPartial: function fromPartial(object) {
    var message = createBaseQueryGroupRequest();
    message.id = object.id !== undefined && object.id !== null ? _groupid.GroupID.fromPartial(object.id) : undefined;
    return message;
  }
};
exports.QueryGroupRequest = QueryGroupRequest;

function createBaseQueryGroupResponse() {
  return {
    group: undefined
  };
}

var QueryGroupResponse = {
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();

    if (message.group !== undefined) {
      _group.Group.encode(message.group, writer.uint32(10).fork()).ldelim();
    }

    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseQueryGroupResponse();

    while (reader.pos < end) {
      var tag = reader.uint32();

      switch (tag >>> 3) {
        case 1:
          message.group = _group.Group.decode(reader, reader.uint32());
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  },
  fromJSON: function fromJSON(object) {
    return {
      group: (0, _helpers.isSet)(object.group) ? _group.Group.fromJSON(object.group) : undefined
    };
  },
  toJSON: function toJSON(message) {
    var obj = {};
    message.group !== undefined && (obj.group = message.group ? _group.Group.toJSON(message.group) : undefined);
    return obj;
  },
  fromPartial: function fromPartial(object) {
    var message = createBaseQueryGroupResponse();
    message.group = object.group !== undefined && object.group !== null ? _group.Group.fromPartial(object.group) : undefined;
    return message;
  }
};
exports.QueryGroupResponse = QueryGroupResponse;