"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Storage = exports.ResourceUnits = exports.Memory = exports.CPU = void 0;

var _resourcevalue = require("./resourcevalue");

var _attribute = require("./attribute");

var _endpoint = require("./endpoint");

var _m0 = _interopRequireWildcard(require("protobufjs/minimal"));

var _helpers = require("@osmonauts/helpers");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function createBaseCPU() {
  return {
    units: undefined,
    attributes: []
  };
}

var CPU = {
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();

    if (message.units !== undefined) {
      _resourcevalue.ResourceValue.encode(message.units, writer.uint32(10).fork()).ldelim();
    }

    var _iterator = _createForOfIteratorHelper(message.attributes),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var v = _step.value;

        _attribute.Attribute.encode(v, writer.uint32(18).fork()).ldelim();
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }

    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseCPU();

    while (reader.pos < end) {
      var tag = reader.uint32();

      switch (tag >>> 3) {
        case 1:
          message.units = _resourcevalue.ResourceValue.decode(reader, reader.uint32());
          break;

        case 2:
          message.attributes.push(_attribute.Attribute.decode(reader, reader.uint32()));
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  },
  fromJSON: function fromJSON(object) {
    return {
      units: (0, _helpers.isSet)(object.units) ? _resourcevalue.ResourceValue.fromJSON(object.units) : undefined,
      attributes: Array.isArray(object === null || object === void 0 ? void 0 : object.attributes) ? object.attributes.map(function (e) {
        return _attribute.Attribute.fromJSON(e);
      }) : []
    };
  },
  toJSON: function toJSON(message) {
    var obj = {};
    message.units !== undefined && (obj.units = message.units ? _resourcevalue.ResourceValue.toJSON(message.units) : undefined);

    if (message.attributes) {
      obj.attributes = message.attributes.map(function (e) {
        return e ? _attribute.Attribute.toJSON(e) : undefined;
      });
    } else {
      obj.attributes = [];
    }

    return obj;
  },
  fromPartial: function fromPartial(object) {
    var _object$attributes;

    var message = createBaseCPU();
    message.units = object.units !== undefined && object.units !== null ? _resourcevalue.ResourceValue.fromPartial(object.units) : undefined;
    message.attributes = ((_object$attributes = object.attributes) === null || _object$attributes === void 0 ? void 0 : _object$attributes.map(function (e) {
      return _attribute.Attribute.fromPartial(e);
    })) || [];
    return message;
  }
};
exports.CPU = CPU;

function createBaseMemory() {
  return {
    quantity: undefined,
    attributes: []
  };
}

var Memory = {
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();

    if (message.quantity !== undefined) {
      _resourcevalue.ResourceValue.encode(message.quantity, writer.uint32(10).fork()).ldelim();
    }

    var _iterator2 = _createForOfIteratorHelper(message.attributes),
        _step2;

    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var v = _step2.value;

        _attribute.Attribute.encode(v, writer.uint32(18).fork()).ldelim();
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }

    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseMemory();

    while (reader.pos < end) {
      var tag = reader.uint32();

      switch (tag >>> 3) {
        case 1:
          message.quantity = _resourcevalue.ResourceValue.decode(reader, reader.uint32());
          break;

        case 2:
          message.attributes.push(_attribute.Attribute.decode(reader, reader.uint32()));
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  },
  fromJSON: function fromJSON(object) {
    return {
      quantity: (0, _helpers.isSet)(object.quantity) ? _resourcevalue.ResourceValue.fromJSON(object.quantity) : undefined,
      attributes: Array.isArray(object === null || object === void 0 ? void 0 : object.attributes) ? object.attributes.map(function (e) {
        return _attribute.Attribute.fromJSON(e);
      }) : []
    };
  },
  toJSON: function toJSON(message) {
    var obj = {};
    message.quantity !== undefined && (obj.quantity = message.quantity ? _resourcevalue.ResourceValue.toJSON(message.quantity) : undefined);

    if (message.attributes) {
      obj.attributes = message.attributes.map(function (e) {
        return e ? _attribute.Attribute.toJSON(e) : undefined;
      });
    } else {
      obj.attributes = [];
    }

    return obj;
  },
  fromPartial: function fromPartial(object) {
    var _object$attributes2;

    var message = createBaseMemory();
    message.quantity = object.quantity !== undefined && object.quantity !== null ? _resourcevalue.ResourceValue.fromPartial(object.quantity) : undefined;
    message.attributes = ((_object$attributes2 = object.attributes) === null || _object$attributes2 === void 0 ? void 0 : _object$attributes2.map(function (e) {
      return _attribute.Attribute.fromPartial(e);
    })) || [];
    return message;
  }
};
exports.Memory = Memory;

function createBaseStorage() {
  return {
    quantity: undefined,
    attributes: []
  };
}

var Storage = {
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();

    if (message.quantity !== undefined) {
      _resourcevalue.ResourceValue.encode(message.quantity, writer.uint32(10).fork()).ldelim();
    }

    var _iterator3 = _createForOfIteratorHelper(message.attributes),
        _step3;

    try {
      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
        var v = _step3.value;

        _attribute.Attribute.encode(v, writer.uint32(18).fork()).ldelim();
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }

    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseStorage();

    while (reader.pos < end) {
      var tag = reader.uint32();

      switch (tag >>> 3) {
        case 1:
          message.quantity = _resourcevalue.ResourceValue.decode(reader, reader.uint32());
          break;

        case 2:
          message.attributes.push(_attribute.Attribute.decode(reader, reader.uint32()));
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  },
  fromJSON: function fromJSON(object) {
    return {
      quantity: (0, _helpers.isSet)(object.quantity) ? _resourcevalue.ResourceValue.fromJSON(object.quantity) : undefined,
      attributes: Array.isArray(object === null || object === void 0 ? void 0 : object.attributes) ? object.attributes.map(function (e) {
        return _attribute.Attribute.fromJSON(e);
      }) : []
    };
  },
  toJSON: function toJSON(message) {
    var obj = {};
    message.quantity !== undefined && (obj.quantity = message.quantity ? _resourcevalue.ResourceValue.toJSON(message.quantity) : undefined);

    if (message.attributes) {
      obj.attributes = message.attributes.map(function (e) {
        return e ? _attribute.Attribute.toJSON(e) : undefined;
      });
    } else {
      obj.attributes = [];
    }

    return obj;
  },
  fromPartial: function fromPartial(object) {
    var _object$attributes3;

    var message = createBaseStorage();
    message.quantity = object.quantity !== undefined && object.quantity !== null ? _resourcevalue.ResourceValue.fromPartial(object.quantity) : undefined;
    message.attributes = ((_object$attributes3 = object.attributes) === null || _object$attributes3 === void 0 ? void 0 : _object$attributes3.map(function (e) {
      return _attribute.Attribute.fromPartial(e);
    })) || [];
    return message;
  }
};
exports.Storage = Storage;

function createBaseResourceUnits() {
  return {
    cpu: undefined,
    memory: undefined,
    storage: undefined,
    endpoints: []
  };
}

var ResourceUnits = {
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();

    if (message.cpu !== undefined) {
      CPU.encode(message.cpu, writer.uint32(10).fork()).ldelim();
    }

    if (message.memory !== undefined) {
      Memory.encode(message.memory, writer.uint32(18).fork()).ldelim();
    }

    if (message.storage !== undefined) {
      Storage.encode(message.storage, writer.uint32(26).fork()).ldelim();
    }

    var _iterator4 = _createForOfIteratorHelper(message.endpoints),
        _step4;

    try {
      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
        var v = _step4.value;

        _endpoint.Endpoint.encode(v, writer.uint32(34).fork()).ldelim();
      }
    } catch (err) {
      _iterator4.e(err);
    } finally {
      _iterator4.f();
    }

    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseResourceUnits();

    while (reader.pos < end) {
      var tag = reader.uint32();

      switch (tag >>> 3) {
        case 1:
          message.cpu = CPU.decode(reader, reader.uint32());
          break;

        case 2:
          message.memory = Memory.decode(reader, reader.uint32());
          break;

        case 3:
          message.storage = Storage.decode(reader, reader.uint32());
          break;

        case 4:
          message.endpoints.push(_endpoint.Endpoint.decode(reader, reader.uint32()));
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  },
  fromJSON: function fromJSON(object) {
    return {
      cpu: (0, _helpers.isSet)(object.cpu) ? CPU.fromJSON(object.cpu) : undefined,
      memory: (0, _helpers.isSet)(object.memory) ? Memory.fromJSON(object.memory) : undefined,
      storage: (0, _helpers.isSet)(object.storage) ? Storage.fromJSON(object.storage) : undefined,
      endpoints: Array.isArray(object === null || object === void 0 ? void 0 : object.endpoints) ? object.endpoints.map(function (e) {
        return _endpoint.Endpoint.fromJSON(e);
      }) : []
    };
  },
  toJSON: function toJSON(message) {
    var obj = {};
    message.cpu !== undefined && (obj.cpu = message.cpu ? CPU.toJSON(message.cpu) : undefined);
    message.memory !== undefined && (obj.memory = message.memory ? Memory.toJSON(message.memory) : undefined);
    message.storage !== undefined && (obj.storage = message.storage ? Storage.toJSON(message.storage) : undefined);

    if (message.endpoints) {
      obj.endpoints = message.endpoints.map(function (e) {
        return e ? _endpoint.Endpoint.toJSON(e) : undefined;
      });
    } else {
      obj.endpoints = [];
    }

    return obj;
  },
  fromPartial: function fromPartial(object) {
    var _object$endpoints;

    var message = createBaseResourceUnits();
    message.cpu = object.cpu !== undefined && object.cpu !== null ? CPU.fromPartial(object.cpu) : undefined;
    message.memory = object.memory !== undefined && object.memory !== null ? Memory.fromPartial(object.memory) : undefined;
    message.storage = object.storage !== undefined && object.storage !== null ? Storage.fromPartial(object.storage) : undefined;
    message.endpoints = ((_object$endpoints = object.endpoints) === null || _object$endpoints === void 0 ? void 0 : _object$endpoints.map(function (e) {
      return _endpoint.Endpoint.fromPartial(e);
    })) || [];
    return message;
  }
};
exports.ResourceUnits = ResourceUnits;