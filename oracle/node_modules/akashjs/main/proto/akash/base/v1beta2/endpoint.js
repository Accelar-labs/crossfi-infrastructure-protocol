"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Endpoint_Kind = exports.Endpoint = void 0;
exports.endpoint_KindFromJSON = endpoint_KindFromJSON;
exports.endpoint_KindToJSON = endpoint_KindToJSON;

var _m0 = _interopRequireWildcard(require("protobufjs/minimal"));

var _helpers = require("@osmonauts/helpers");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/** This describes how the endpoint is implemented when the lease is deployed */
var Endpoint_Kind;
exports.Endpoint_Kind = Endpoint_Kind;

(function (Endpoint_Kind) {
  Endpoint_Kind[Endpoint_Kind["SHARED_HTTP"] = 0] = "SHARED_HTTP";
  Endpoint_Kind[Endpoint_Kind["RANDOM_PORT"] = 1] = "RANDOM_PORT";
  Endpoint_Kind[Endpoint_Kind["LEASED_IP"] = 2] = "LEASED_IP";
  Endpoint_Kind[Endpoint_Kind["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(Endpoint_Kind || (exports.Endpoint_Kind = Endpoint_Kind = {}));

function endpoint_KindFromJSON(object) {
  switch (object) {
    case 0:
    case "SHARED_HTTP":
      return Endpoint_Kind.SHARED_HTTP;

    case 1:
    case "RANDOM_PORT":
      return Endpoint_Kind.RANDOM_PORT;

    case 2:
    case "LEASED_IP":
      return Endpoint_Kind.LEASED_IP;

    case -1:
    case "UNRECOGNIZED":
    default:
      return Endpoint_Kind.UNRECOGNIZED;
  }
}

function endpoint_KindToJSON(object) {
  switch (object) {
    case Endpoint_Kind.SHARED_HTTP:
      return "SHARED_HTTP";

    case Endpoint_Kind.RANDOM_PORT:
      return "RANDOM_PORT";

    case Endpoint_Kind.LEASED_IP:
      return "LEASED_IP";

    default:
      return "UNKNOWN";
  }
}
/** Endpoint describes a publicly accessible IP service */


function createBaseEndpoint() {
  return {
    kind: 0,
    sequenceNumber: 0
  };
}

var Endpoint = {
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();

    if (message.kind !== 0) {
      writer.uint32(8).int32(message.kind);
    }

    if (message.sequenceNumber !== 0) {
      writer.uint32(16).uint32(message.sequenceNumber);
    }

    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseEndpoint();

    while (reader.pos < end) {
      var tag = reader.uint32();

      switch (tag >>> 3) {
        case 1:
          message.kind = reader.int32();
          break;

        case 2:
          message.sequenceNumber = reader.uint32();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  },
  fromJSON: function fromJSON(object) {
    return {
      kind: (0, _helpers.isSet)(object.kind) ? endpoint_KindFromJSON(object.kind) : 0,
      sequenceNumber: (0, _helpers.isSet)(object.sequenceNumber) ? Number(object.sequenceNumber) : 0
    };
  },
  toJSON: function toJSON(message) {
    var obj = {};
    message.kind !== undefined && (obj.kind = endpoint_KindToJSON(message.kind));
    message.sequenceNumber !== undefined && (obj.sequenceNumber = Math.round(message.sequenceNumber));
    return obj;
  },
  fromPartial: function fromPartial(object) {
    var _object$kind, _object$sequenceNumbe;

    var message = createBaseEndpoint();
    message.kind = (_object$kind = object.kind) !== null && _object$kind !== void 0 ? _object$kind : 0;
    message.sequenceNumber = (_object$sequenceNumbe = object.sequenceNumber) !== null && _object$sequenceNumbe !== void 0 ? _object$sequenceNumbe : 0;
    return message;
  }
};
exports.Endpoint = Endpoint;