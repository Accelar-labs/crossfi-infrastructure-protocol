"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.registry = exports.load = exports.MessageComposer = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _provider = require("./provider");

var registry = [["/akash.provider.v1beta1.MsgCreateProvider", _provider.MsgCreateProvider], ["/akash.provider.v1beta1.MsgUpdateProvider", _provider.MsgUpdateProvider], ["/akash.provider.v1beta1.MsgDeleteProvider", _provider.MsgDeleteProvider]];
exports.registry = registry;

var load = function load(protoRegistry) {
  registry.forEach(function (_ref) {
    var _ref2 = (0, _slicedToArray2["default"])(_ref, 2),
        typeUrl = _ref2[0],
        mod = _ref2[1];

    protoRegistry.register(typeUrl, mod);
  });
};

exports.load = load;
var MessageComposer = {
  encoded: {
    createProvider: function createProvider(value) {
      return {
        type_url: "/akash.provider.v1beta1.MsgCreateProvider",
        value: _provider.MsgCreateProvider.encode(value).finish()
      };
    },
    updateProvider: function updateProvider(value) {
      return {
        type_url: "/akash.provider.v1beta1.MsgUpdateProvider",
        value: _provider.MsgUpdateProvider.encode(value).finish()
      };
    },
    deleteProvider: function deleteProvider(value) {
      return {
        type_url: "/akash.provider.v1beta1.MsgDeleteProvider",
        value: _provider.MsgDeleteProvider.encode(value).finish()
      };
    }
  },
  withTypeUrl: {
    createProvider: function createProvider(value) {
      return {
        typeUrl: "/akash.provider.v1beta1.MsgCreateProvider",
        value: value
      };
    },
    updateProvider: function updateProvider(value) {
      return {
        typeUrl: "/akash.provider.v1beta1.MsgUpdateProvider",
        value: value
      };
    },
    deleteProvider: function deleteProvider(value) {
      return {
        typeUrl: "/akash.provider.v1beta1.MsgDeleteProvider",
        value: value
      };
    }
  },
  toJSON: {
    createProvider: function createProvider(value) {
      return {
        typeUrl: "/akash.provider.v1beta1.MsgCreateProvider",
        value: _provider.MsgCreateProvider.toJSON(value)
      };
    },
    updateProvider: function updateProvider(value) {
      return {
        typeUrl: "/akash.provider.v1beta1.MsgUpdateProvider",
        value: _provider.MsgUpdateProvider.toJSON(value)
      };
    },
    deleteProvider: function deleteProvider(value) {
      return {
        typeUrl: "/akash.provider.v1beta1.MsgDeleteProvider",
        value: _provider.MsgDeleteProvider.toJSON(value)
      };
    }
  },
  fromJSON: {
    createProvider: function createProvider(value) {
      return {
        typeUrl: "/akash.provider.v1beta1.MsgCreateProvider",
        value: _provider.MsgCreateProvider.fromJSON(value)
      };
    },
    updateProvider: function updateProvider(value) {
      return {
        typeUrl: "/akash.provider.v1beta1.MsgUpdateProvider",
        value: _provider.MsgUpdateProvider.fromJSON(value)
      };
    },
    deleteProvider: function deleteProvider(value) {
      return {
        typeUrl: "/akash.provider.v1beta1.MsgDeleteProvider",
        value: _provider.MsgDeleteProvider.fromJSON(value)
      };
    }
  },
  fromPartial: {
    createProvider: function createProvider(value) {
      return {
        typeUrl: "/akash.provider.v1beta1.MsgCreateProvider",
        value: _provider.MsgCreateProvider.fromPartial(value)
      };
    },
    updateProvider: function updateProvider(value) {
      return {
        typeUrl: "/akash.provider.v1beta1.MsgUpdateProvider",
        value: _provider.MsgUpdateProvider.fromPartial(value)
      };
    },
    deleteProvider: function deleteProvider(value) {
      return {
        typeUrl: "/akash.provider.v1beta1.MsgDeleteProvider",
        value: _provider.MsgDeleteProvider.fromPartial(value)
      };
    }
  }
};
exports.MessageComposer = MessageComposer;