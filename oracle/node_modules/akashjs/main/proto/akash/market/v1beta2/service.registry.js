"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.registry = exports.load = exports.MessageComposer = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _bid = require("./bid");

var _lease = require("./lease");

var registry = [["/akash.market.v1beta2.MsgCreateBid", _bid.MsgCreateBid], ["/akash.market.v1beta2.MsgCloseBid", _bid.MsgCloseBid], ["/akash.market.v1beta2.MsgWithdrawLease", _lease.MsgWithdrawLease], ["/akash.market.v1beta2.MsgCreateLease", _lease.MsgCreateLease], ["/akash.market.v1beta2.MsgCloseLease", _lease.MsgCloseLease]];
exports.registry = registry;

var load = function load(protoRegistry) {
  registry.forEach(function (_ref) {
    var _ref2 = (0, _slicedToArray2["default"])(_ref, 2),
        typeUrl = _ref2[0],
        mod = _ref2[1];

    protoRegistry.register(typeUrl, mod);
  });
};

exports.load = load;
var MessageComposer = {
  encoded: {
    createBid: function createBid(value) {
      return {
        type_url: "/akash.market.v1beta2.MsgCreateBid",
        value: _bid.MsgCreateBid.encode(value).finish()
      };
    },
    closeBid: function closeBid(value) {
      return {
        type_url: "/akash.market.v1beta2.MsgCloseBid",
        value: _bid.MsgCloseBid.encode(value).finish()
      };
    },
    withdrawLease: function withdrawLease(value) {
      return {
        type_url: "/akash.market.v1beta2.MsgWithdrawLease",
        value: _lease.MsgWithdrawLease.encode(value).finish()
      };
    },
    createLease: function createLease(value) {
      return {
        type_url: "/akash.market.v1beta2.MsgCreateLease",
        value: _lease.MsgCreateLease.encode(value).finish()
      };
    },
    closeLease: function closeLease(value) {
      return {
        type_url: "/akash.market.v1beta2.MsgCloseLease",
        value: _lease.MsgCloseLease.encode(value).finish()
      };
    }
  },
  withTypeUrl: {
    createBid: function createBid(value) {
      return {
        typeUrl: "/akash.market.v1beta2.MsgCreateBid",
        value: value
      };
    },
    closeBid: function closeBid(value) {
      return {
        typeUrl: "/akash.market.v1beta2.MsgCloseBid",
        value: value
      };
    },
    withdrawLease: function withdrawLease(value) {
      return {
        typeUrl: "/akash.market.v1beta2.MsgWithdrawLease",
        value: value
      };
    },
    createLease: function createLease(value) {
      return {
        typeUrl: "/akash.market.v1beta2.MsgCreateLease",
        value: value
      };
    },
    closeLease: function closeLease(value) {
      return {
        typeUrl: "/akash.market.v1beta2.MsgCloseLease",
        value: value
      };
    }
  },
  toJSON: {
    createBid: function createBid(value) {
      return {
        typeUrl: "/akash.market.v1beta2.MsgCreateBid",
        value: _bid.MsgCreateBid.toJSON(value)
      };
    },
    closeBid: function closeBid(value) {
      return {
        typeUrl: "/akash.market.v1beta2.MsgCloseBid",
        value: _bid.MsgCloseBid.toJSON(value)
      };
    },
    withdrawLease: function withdrawLease(value) {
      return {
        typeUrl: "/akash.market.v1beta2.MsgWithdrawLease",
        value: _lease.MsgWithdrawLease.toJSON(value)
      };
    },
    createLease: function createLease(value) {
      return {
        typeUrl: "/akash.market.v1beta2.MsgCreateLease",
        value: _lease.MsgCreateLease.toJSON(value)
      };
    },
    closeLease: function closeLease(value) {
      return {
        typeUrl: "/akash.market.v1beta2.MsgCloseLease",
        value: _lease.MsgCloseLease.toJSON(value)
      };
    }
  },
  fromJSON: {
    createBid: function createBid(value) {
      return {
        typeUrl: "/akash.market.v1beta2.MsgCreateBid",
        value: _bid.MsgCreateBid.fromJSON(value)
      };
    },
    closeBid: function closeBid(value) {
      return {
        typeUrl: "/akash.market.v1beta2.MsgCloseBid",
        value: _bid.MsgCloseBid.fromJSON(value)
      };
    },
    withdrawLease: function withdrawLease(value) {
      return {
        typeUrl: "/akash.market.v1beta2.MsgWithdrawLease",
        value: _lease.MsgWithdrawLease.fromJSON(value)
      };
    },
    createLease: function createLease(value) {
      return {
        typeUrl: "/akash.market.v1beta2.MsgCreateLease",
        value: _lease.MsgCreateLease.fromJSON(value)
      };
    },
    closeLease: function closeLease(value) {
      return {
        typeUrl: "/akash.market.v1beta2.MsgCloseLease",
        value: _lease.MsgCloseLease.fromJSON(value)
      };
    }
  },
  fromPartial: {
    createBid: function createBid(value) {
      return {
        typeUrl: "/akash.market.v1beta2.MsgCreateBid",
        value: _bid.MsgCreateBid.fromPartial(value)
      };
    },
    closeBid: function closeBid(value) {
      return {
        typeUrl: "/akash.market.v1beta2.MsgCloseBid",
        value: _bid.MsgCloseBid.fromPartial(value)
      };
    },
    withdrawLease: function withdrawLease(value) {
      return {
        typeUrl: "/akash.market.v1beta2.MsgWithdrawLease",
        value: _lease.MsgWithdrawLease.fromPartial(value)
      };
    },
    createLease: function createLease(value) {
      return {
        typeUrl: "/akash.market.v1beta2.MsgCreateLease",
        value: _lease.MsgCreateLease.fromPartial(value)
      };
    },
    closeLease: function closeLease(value) {
      return {
        typeUrl: "/akash.market.v1beta2.MsgCloseLease",
        value: _lease.MsgCloseLease.fromPartial(value)
      };
    }
  }
};
exports.MessageComposer = MessageComposer;