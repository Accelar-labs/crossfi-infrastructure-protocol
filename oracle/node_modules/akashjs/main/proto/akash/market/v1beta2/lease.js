"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MsgWithdrawLeaseResponse = exports.MsgWithdrawLease = exports.MsgCreateLeaseResponse = exports.MsgCreateLease = exports.MsgCloseLeaseResponse = exports.MsgCloseLease = exports.Lease_State = exports.LeaseID = exports.LeaseFilters = exports.Lease = void 0;
exports.lease_StateFromJSON = lease_StateFromJSON;
exports.lease_StateToJSON = lease_StateToJSON;

var _coin = require("../../../cosmos/base/v1beta1/coin");

var _bid = require("./bid");

var _m0 = _interopRequireWildcard(require("protobufjs/minimal"));

var _helpers = require("@osmonauts/helpers");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/** State is an enum which refers to state of lease */
var Lease_State;
exports.Lease_State = Lease_State;

(function (Lease_State) {
  Lease_State[Lease_State["invalid"] = 0] = "invalid";
  Lease_State[Lease_State["active"] = 1] = "active";
  Lease_State[Lease_State["insufficient_funds"] = 2] = "insufficient_funds";
  Lease_State[Lease_State["closed"] = 3] = "closed";
  Lease_State[Lease_State["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(Lease_State || (exports.Lease_State = Lease_State = {}));

function lease_StateFromJSON(object) {
  switch (object) {
    case 0:
    case "invalid":
      return Lease_State.invalid;

    case 1:
    case "active":
      return Lease_State.active;

    case 2:
    case "insufficient_funds":
      return Lease_State.insufficient_funds;

    case 3:
    case "closed":
      return Lease_State.closed;

    case -1:
    case "UNRECOGNIZED":
    default:
      return Lease_State.UNRECOGNIZED;
  }
}

function lease_StateToJSON(object) {
  switch (object) {
    case Lease_State.invalid:
      return "invalid";

    case Lease_State.active:
      return "active";

    case Lease_State.insufficient_funds:
      return "insufficient_funds";

    case Lease_State.closed:
      return "closed";

    default:
      return "UNKNOWN";
  }
}
/** LeaseID stores bid details of lease */


function createBaseLeaseID() {
  return {
    owner: "",
    dseq: _helpers.Long.UZERO,
    gseq: 0,
    oseq: 0,
    provider: ""
  };
}

var LeaseID = {
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();

    if (message.owner !== "") {
      writer.uint32(10).string(message.owner);
    }

    if (!message.dseq.isZero()) {
      writer.uint32(16).uint64(message.dseq);
    }

    if (message.gseq !== 0) {
      writer.uint32(24).uint32(message.gseq);
    }

    if (message.oseq !== 0) {
      writer.uint32(32).uint32(message.oseq);
    }

    if (message.provider !== "") {
      writer.uint32(42).string(message.provider);
    }

    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseLeaseID();

    while (reader.pos < end) {
      var tag = reader.uint32();

      switch (tag >>> 3) {
        case 1:
          message.owner = reader.string();
          break;

        case 2:
          message.dseq = reader.uint64();
          break;

        case 3:
          message.gseq = reader.uint32();
          break;

        case 4:
          message.oseq = reader.uint32();
          break;

        case 5:
          message.provider = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  },
  fromJSON: function fromJSON(object) {
    return {
      owner: (0, _helpers.isSet)(object.owner) ? String(object.owner) : "",
      dseq: (0, _helpers.isSet)(object.dseq) ? _helpers.Long.fromString(object.dseq) : _helpers.Long.UZERO,
      gseq: (0, _helpers.isSet)(object.gseq) ? Number(object.gseq) : 0,
      oseq: (0, _helpers.isSet)(object.oseq) ? Number(object.oseq) : 0,
      provider: (0, _helpers.isSet)(object.provider) ? String(object.provider) : ""
    };
  },
  toJSON: function toJSON(message) {
    var obj = {};
    message.owner !== undefined && (obj.owner = message.owner);
    message.dseq !== undefined && (obj.dseq = (message.dseq || _helpers.Long.UZERO).toString());
    message.gseq !== undefined && (obj.gseq = Math.round(message.gseq));
    message.oseq !== undefined && (obj.oseq = Math.round(message.oseq));
    message.provider !== undefined && (obj.provider = message.provider);
    return obj;
  },
  fromPartial: function fromPartial(object) {
    var _object$owner, _object$gseq, _object$oseq, _object$provider;

    var message = createBaseLeaseID();
    message.owner = (_object$owner = object.owner) !== null && _object$owner !== void 0 ? _object$owner : "";
    message.dseq = object.dseq !== undefined && object.dseq !== null ? _helpers.Long.fromValue(object.dseq) : _helpers.Long.UZERO;
    message.gseq = (_object$gseq = object.gseq) !== null && _object$gseq !== void 0 ? _object$gseq : 0;
    message.oseq = (_object$oseq = object.oseq) !== null && _object$oseq !== void 0 ? _object$oseq : 0;
    message.provider = (_object$provider = object.provider) !== null && _object$provider !== void 0 ? _object$provider : "";
    return message;
  }
};
exports.LeaseID = LeaseID;

function createBaseLease() {
  return {
    leaseId: undefined,
    state: 0,
    price: undefined,
    createdAt: _helpers.Long.ZERO,
    closedOn: _helpers.Long.ZERO
  };
}

var Lease = {
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();

    if (message.leaseId !== undefined) {
      LeaseID.encode(message.leaseId, writer.uint32(10).fork()).ldelim();
    }

    if (message.state !== 0) {
      writer.uint32(16).int32(message.state);
    }

    if (message.price !== undefined) {
      _coin.DecCoin.encode(message.price, writer.uint32(26).fork()).ldelim();
    }

    if (!message.createdAt.isZero()) {
      writer.uint32(32).int64(message.createdAt);
    }

    if (!message.closedOn.isZero()) {
      writer.uint32(40).int64(message.closedOn);
    }

    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseLease();

    while (reader.pos < end) {
      var tag = reader.uint32();

      switch (tag >>> 3) {
        case 1:
          message.leaseId = LeaseID.decode(reader, reader.uint32());
          break;

        case 2:
          message.state = reader.int32();
          break;

        case 3:
          message.price = _coin.DecCoin.decode(reader, reader.uint32());
          break;

        case 4:
          message.createdAt = reader.int64();
          break;

        case 5:
          message.closedOn = reader.int64();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  },
  fromJSON: function fromJSON(object) {
    return {
      leaseId: (0, _helpers.isSet)(object.leaseId) ? LeaseID.fromJSON(object.leaseId) : undefined,
      state: (0, _helpers.isSet)(object.state) ? lease_StateFromJSON(object.state) : 0,
      price: (0, _helpers.isSet)(object.price) ? _coin.DecCoin.fromJSON(object.price) : undefined,
      createdAt: (0, _helpers.isSet)(object.createdAt) ? _helpers.Long.fromString(object.createdAt) : _helpers.Long.ZERO,
      closedOn: (0, _helpers.isSet)(object.closedOn) ? _helpers.Long.fromString(object.closedOn) : _helpers.Long.ZERO
    };
  },
  toJSON: function toJSON(message) {
    var obj = {};
    message.leaseId !== undefined && (obj.leaseId = message.leaseId ? LeaseID.toJSON(message.leaseId) : undefined);
    message.state !== undefined && (obj.state = lease_StateToJSON(message.state));
    message.price !== undefined && (obj.price = message.price ? _coin.DecCoin.toJSON(message.price) : undefined);
    message.createdAt !== undefined && (obj.createdAt = (message.createdAt || _helpers.Long.ZERO).toString());
    message.closedOn !== undefined && (obj.closedOn = (message.closedOn || _helpers.Long.ZERO).toString());
    return obj;
  },
  fromPartial: function fromPartial(object) {
    var _object$state;

    var message = createBaseLease();
    message.leaseId = object.leaseId !== undefined && object.leaseId !== null ? LeaseID.fromPartial(object.leaseId) : undefined;
    message.state = (_object$state = object.state) !== null && _object$state !== void 0 ? _object$state : 0;
    message.price = object.price !== undefined && object.price !== null ? _coin.DecCoin.fromPartial(object.price) : undefined;
    message.createdAt = object.createdAt !== undefined && object.createdAt !== null ? _helpers.Long.fromValue(object.createdAt) : _helpers.Long.ZERO;
    message.closedOn = object.closedOn !== undefined && object.closedOn !== null ? _helpers.Long.fromValue(object.closedOn) : _helpers.Long.ZERO;
    return message;
  }
};
exports.Lease = Lease;

function createBaseLeaseFilters() {
  return {
    owner: "",
    dseq: _helpers.Long.UZERO,
    gseq: 0,
    oseq: 0,
    provider: "",
    state: ""
  };
}

var LeaseFilters = {
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();

    if (message.owner !== "") {
      writer.uint32(10).string(message.owner);
    }

    if (!message.dseq.isZero()) {
      writer.uint32(16).uint64(message.dseq);
    }

    if (message.gseq !== 0) {
      writer.uint32(24).uint32(message.gseq);
    }

    if (message.oseq !== 0) {
      writer.uint32(32).uint32(message.oseq);
    }

    if (message.provider !== "") {
      writer.uint32(42).string(message.provider);
    }

    if (message.state !== "") {
      writer.uint32(50).string(message.state);
    }

    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseLeaseFilters();

    while (reader.pos < end) {
      var tag = reader.uint32();

      switch (tag >>> 3) {
        case 1:
          message.owner = reader.string();
          break;

        case 2:
          message.dseq = reader.uint64();
          break;

        case 3:
          message.gseq = reader.uint32();
          break;

        case 4:
          message.oseq = reader.uint32();
          break;

        case 5:
          message.provider = reader.string();
          break;

        case 6:
          message.state = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  },
  fromJSON: function fromJSON(object) {
    return {
      owner: (0, _helpers.isSet)(object.owner) ? String(object.owner) : "",
      dseq: (0, _helpers.isSet)(object.dseq) ? _helpers.Long.fromString(object.dseq) : _helpers.Long.UZERO,
      gseq: (0, _helpers.isSet)(object.gseq) ? Number(object.gseq) : 0,
      oseq: (0, _helpers.isSet)(object.oseq) ? Number(object.oseq) : 0,
      provider: (0, _helpers.isSet)(object.provider) ? String(object.provider) : "",
      state: (0, _helpers.isSet)(object.state) ? String(object.state) : ""
    };
  },
  toJSON: function toJSON(message) {
    var obj = {};
    message.owner !== undefined && (obj.owner = message.owner);
    message.dseq !== undefined && (obj.dseq = (message.dseq || _helpers.Long.UZERO).toString());
    message.gseq !== undefined && (obj.gseq = Math.round(message.gseq));
    message.oseq !== undefined && (obj.oseq = Math.round(message.oseq));
    message.provider !== undefined && (obj.provider = message.provider);
    message.state !== undefined && (obj.state = message.state);
    return obj;
  },
  fromPartial: function fromPartial(object) {
    var _object$owner2, _object$gseq2, _object$oseq2, _object$provider2, _object$state2;

    var message = createBaseLeaseFilters();
    message.owner = (_object$owner2 = object.owner) !== null && _object$owner2 !== void 0 ? _object$owner2 : "";
    message.dseq = object.dseq !== undefined && object.dseq !== null ? _helpers.Long.fromValue(object.dseq) : _helpers.Long.UZERO;
    message.gseq = (_object$gseq2 = object.gseq) !== null && _object$gseq2 !== void 0 ? _object$gseq2 : 0;
    message.oseq = (_object$oseq2 = object.oseq) !== null && _object$oseq2 !== void 0 ? _object$oseq2 : 0;
    message.provider = (_object$provider2 = object.provider) !== null && _object$provider2 !== void 0 ? _object$provider2 : "";
    message.state = (_object$state2 = object.state) !== null && _object$state2 !== void 0 ? _object$state2 : "";
    return message;
  }
};
exports.LeaseFilters = LeaseFilters;

function createBaseMsgCreateLease() {
  return {
    bidId: undefined
  };
}

var MsgCreateLease = {
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();

    if (message.bidId !== undefined) {
      _bid.BidID.encode(message.bidId, writer.uint32(10).fork()).ldelim();
    }

    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseMsgCreateLease();

    while (reader.pos < end) {
      var tag = reader.uint32();

      switch (tag >>> 3) {
        case 1:
          message.bidId = _bid.BidID.decode(reader, reader.uint32());
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  },
  fromJSON: function fromJSON(object) {
    return {
      bidId: (0, _helpers.isSet)(object.bidId) ? _bid.BidID.fromJSON(object.bidId) : undefined
    };
  },
  toJSON: function toJSON(message) {
    var obj = {};
    message.bidId !== undefined && (obj.bidId = message.bidId ? _bid.BidID.toJSON(message.bidId) : undefined);
    return obj;
  },
  fromPartial: function fromPartial(object) {
    var message = createBaseMsgCreateLease();
    message.bidId = object.bidId !== undefined && object.bidId !== null ? _bid.BidID.fromPartial(object.bidId) : undefined;
    return message;
  }
};
exports.MsgCreateLease = MsgCreateLease;

function createBaseMsgCreateLeaseResponse() {
  return {};
}

var MsgCreateLeaseResponse = {
  encode: function encode(_) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();
    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseMsgCreateLeaseResponse();

    while (reader.pos < end) {
      var tag = reader.uint32();

      switch (tag >>> 3) {
        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  },
  fromJSON: function fromJSON(_) {
    return {};
  },
  toJSON: function toJSON(_) {
    var obj = {};
    return obj;
  },
  fromPartial: function fromPartial(_) {
    var message = createBaseMsgCreateLeaseResponse();
    return message;
  }
};
exports.MsgCreateLeaseResponse = MsgCreateLeaseResponse;

function createBaseMsgWithdrawLease() {
  return {
    bidId: undefined
  };
}

var MsgWithdrawLease = {
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();

    if (message.bidId !== undefined) {
      LeaseID.encode(message.bidId, writer.uint32(10).fork()).ldelim();
    }

    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseMsgWithdrawLease();

    while (reader.pos < end) {
      var tag = reader.uint32();

      switch (tag >>> 3) {
        case 1:
          message.bidId = LeaseID.decode(reader, reader.uint32());
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  },
  fromJSON: function fromJSON(object) {
    return {
      bidId: (0, _helpers.isSet)(object.bidId) ? LeaseID.fromJSON(object.bidId) : undefined
    };
  },
  toJSON: function toJSON(message) {
    var obj = {};
    message.bidId !== undefined && (obj.bidId = message.bidId ? LeaseID.toJSON(message.bidId) : undefined);
    return obj;
  },
  fromPartial: function fromPartial(object) {
    var message = createBaseMsgWithdrawLease();
    message.bidId = object.bidId !== undefined && object.bidId !== null ? LeaseID.fromPartial(object.bidId) : undefined;
    return message;
  }
};
exports.MsgWithdrawLease = MsgWithdrawLease;

function createBaseMsgWithdrawLeaseResponse() {
  return {};
}

var MsgWithdrawLeaseResponse = {
  encode: function encode(_) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();
    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseMsgWithdrawLeaseResponse();

    while (reader.pos < end) {
      var tag = reader.uint32();

      switch (tag >>> 3) {
        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  },
  fromJSON: function fromJSON(_) {
    return {};
  },
  toJSON: function toJSON(_) {
    var obj = {};
    return obj;
  },
  fromPartial: function fromPartial(_) {
    var message = createBaseMsgWithdrawLeaseResponse();
    return message;
  }
};
exports.MsgWithdrawLeaseResponse = MsgWithdrawLeaseResponse;

function createBaseMsgCloseLease() {
  return {
    leaseId: undefined
  };
}

var MsgCloseLease = {
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();

    if (message.leaseId !== undefined) {
      LeaseID.encode(message.leaseId, writer.uint32(10).fork()).ldelim();
    }

    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseMsgCloseLease();

    while (reader.pos < end) {
      var tag = reader.uint32();

      switch (tag >>> 3) {
        case 1:
          message.leaseId = LeaseID.decode(reader, reader.uint32());
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  },
  fromJSON: function fromJSON(object) {
    return {
      leaseId: (0, _helpers.isSet)(object.leaseId) ? LeaseID.fromJSON(object.leaseId) : undefined
    };
  },
  toJSON: function toJSON(message) {
    var obj = {};
    message.leaseId !== undefined && (obj.leaseId = message.leaseId ? LeaseID.toJSON(message.leaseId) : undefined);
    return obj;
  },
  fromPartial: function fromPartial(object) {
    var message = createBaseMsgCloseLease();
    message.leaseId = object.leaseId !== undefined && object.leaseId !== null ? LeaseID.fromPartial(object.leaseId) : undefined;
    return message;
  }
};
exports.MsgCloseLease = MsgCloseLease;

function createBaseMsgCloseLeaseResponse() {
  return {};
}

var MsgCloseLeaseResponse = {
  encode: function encode(_) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();
    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseMsgCloseLeaseResponse();

    while (reader.pos < end) {
      var tag = reader.uint32();

      switch (tag >>> 3) {
        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  },
  fromJSON: function fromJSON(_) {
    return {};
  },
  toJSON: function toJSON(_) {
    var obj = {};
    return obj;
  },
  fromPartial: function fromPartial(_) {
    var message = createBaseMsgCloseLeaseResponse();
    return message;
  }
};
exports.MsgCloseLeaseResponse = MsgCloseLeaseResponse;