"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Order_State = exports.OrderID = exports.OrderFilters = exports.Order = void 0;
exports.order_StateFromJSON = order_StateFromJSON;
exports.order_StateToJSON = order_StateToJSON;

var _groupspec = require("../../deployment/v1beta2/groupspec");

var _m0 = _interopRequireWildcard(require("protobufjs/minimal"));

var _helpers = require("@osmonauts/helpers");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/** State is an enum which refers to state of order */
var Order_State;
exports.Order_State = Order_State;

(function (Order_State) {
  Order_State[Order_State["invalid"] = 0] = "invalid";
  Order_State[Order_State["open"] = 1] = "open";
  Order_State[Order_State["active"] = 2] = "active";
  Order_State[Order_State["closed"] = 3] = "closed";
  Order_State[Order_State["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(Order_State || (exports.Order_State = Order_State = {}));

function order_StateFromJSON(object) {
  switch (object) {
    case 0:
    case "invalid":
      return Order_State.invalid;

    case 1:
    case "open":
      return Order_State.open;

    case 2:
    case "active":
      return Order_State.active;

    case 3:
    case "closed":
      return Order_State.closed;

    case -1:
    case "UNRECOGNIZED":
    default:
      return Order_State.UNRECOGNIZED;
  }
}

function order_StateToJSON(object) {
  switch (object) {
    case Order_State.invalid:
      return "invalid";

    case Order_State.open:
      return "open";

    case Order_State.active:
      return "active";

    case Order_State.closed:
      return "closed";

    default:
      return "UNKNOWN";
  }
}
/** OrderID stores owner and all other seq numbers */


function createBaseOrderID() {
  return {
    owner: "",
    dseq: _helpers.Long.UZERO,
    gseq: 0,
    oseq: 0
  };
}

var OrderID = {
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();

    if (message.owner !== "") {
      writer.uint32(10).string(message.owner);
    }

    if (!message.dseq.isZero()) {
      writer.uint32(16).uint64(message.dseq);
    }

    if (message.gseq !== 0) {
      writer.uint32(24).uint32(message.gseq);
    }

    if (message.oseq !== 0) {
      writer.uint32(32).uint32(message.oseq);
    }

    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseOrderID();

    while (reader.pos < end) {
      var tag = reader.uint32();

      switch (tag >>> 3) {
        case 1:
          message.owner = reader.string();
          break;

        case 2:
          message.dseq = reader.uint64();
          break;

        case 3:
          message.gseq = reader.uint32();
          break;

        case 4:
          message.oseq = reader.uint32();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  },
  fromJSON: function fromJSON(object) {
    return {
      owner: (0, _helpers.isSet)(object.owner) ? String(object.owner) : "",
      dseq: (0, _helpers.isSet)(object.dseq) ? _helpers.Long.fromString(object.dseq) : _helpers.Long.UZERO,
      gseq: (0, _helpers.isSet)(object.gseq) ? Number(object.gseq) : 0,
      oseq: (0, _helpers.isSet)(object.oseq) ? Number(object.oseq) : 0
    };
  },
  toJSON: function toJSON(message) {
    var obj = {};
    message.owner !== undefined && (obj.owner = message.owner);
    message.dseq !== undefined && (obj.dseq = (message.dseq || _helpers.Long.UZERO).toString());
    message.gseq !== undefined && (obj.gseq = Math.round(message.gseq));
    message.oseq !== undefined && (obj.oseq = Math.round(message.oseq));
    return obj;
  },
  fromPartial: function fromPartial(object) {
    var _object$owner, _object$gseq, _object$oseq;

    var message = createBaseOrderID();
    message.owner = (_object$owner = object.owner) !== null && _object$owner !== void 0 ? _object$owner : "";
    message.dseq = object.dseq !== undefined && object.dseq !== null ? _helpers.Long.fromValue(object.dseq) : _helpers.Long.UZERO;
    message.gseq = (_object$gseq = object.gseq) !== null && _object$gseq !== void 0 ? _object$gseq : 0;
    message.oseq = (_object$oseq = object.oseq) !== null && _object$oseq !== void 0 ? _object$oseq : 0;
    return message;
  }
};
exports.OrderID = OrderID;

function createBaseOrder() {
  return {
    orderId: undefined,
    state: 0,
    spec: undefined,
    createdAt: _helpers.Long.ZERO
  };
}

var Order = {
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();

    if (message.orderId !== undefined) {
      OrderID.encode(message.orderId, writer.uint32(10).fork()).ldelim();
    }

    if (message.state !== 0) {
      writer.uint32(16).int32(message.state);
    }

    if (message.spec !== undefined) {
      _groupspec.GroupSpec.encode(message.spec, writer.uint32(26).fork()).ldelim();
    }

    if (!message.createdAt.isZero()) {
      writer.uint32(32).int64(message.createdAt);
    }

    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseOrder();

    while (reader.pos < end) {
      var tag = reader.uint32();

      switch (tag >>> 3) {
        case 1:
          message.orderId = OrderID.decode(reader, reader.uint32());
          break;

        case 2:
          message.state = reader.int32();
          break;

        case 3:
          message.spec = _groupspec.GroupSpec.decode(reader, reader.uint32());
          break;

        case 4:
          message.createdAt = reader.int64();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  },
  fromJSON: function fromJSON(object) {
    return {
      orderId: (0, _helpers.isSet)(object.orderId) ? OrderID.fromJSON(object.orderId) : undefined,
      state: (0, _helpers.isSet)(object.state) ? order_StateFromJSON(object.state) : 0,
      spec: (0, _helpers.isSet)(object.spec) ? _groupspec.GroupSpec.fromJSON(object.spec) : undefined,
      createdAt: (0, _helpers.isSet)(object.createdAt) ? _helpers.Long.fromString(object.createdAt) : _helpers.Long.ZERO
    };
  },
  toJSON: function toJSON(message) {
    var obj = {};
    message.orderId !== undefined && (obj.orderId = message.orderId ? OrderID.toJSON(message.orderId) : undefined);
    message.state !== undefined && (obj.state = order_StateToJSON(message.state));
    message.spec !== undefined && (obj.spec = message.spec ? _groupspec.GroupSpec.toJSON(message.spec) : undefined);
    message.createdAt !== undefined && (obj.createdAt = (message.createdAt || _helpers.Long.ZERO).toString());
    return obj;
  },
  fromPartial: function fromPartial(object) {
    var _object$state;

    var message = createBaseOrder();
    message.orderId = object.orderId !== undefined && object.orderId !== null ? OrderID.fromPartial(object.orderId) : undefined;
    message.state = (_object$state = object.state) !== null && _object$state !== void 0 ? _object$state : 0;
    message.spec = object.spec !== undefined && object.spec !== null ? _groupspec.GroupSpec.fromPartial(object.spec) : undefined;
    message.createdAt = object.createdAt !== undefined && object.createdAt !== null ? _helpers.Long.fromValue(object.createdAt) : _helpers.Long.ZERO;
    return message;
  }
};
exports.Order = Order;

function createBaseOrderFilters() {
  return {
    owner: "",
    dseq: _helpers.Long.UZERO,
    gseq: 0,
    oseq: 0,
    state: ""
  };
}

var OrderFilters = {
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();

    if (message.owner !== "") {
      writer.uint32(10).string(message.owner);
    }

    if (!message.dseq.isZero()) {
      writer.uint32(16).uint64(message.dseq);
    }

    if (message.gseq !== 0) {
      writer.uint32(24).uint32(message.gseq);
    }

    if (message.oseq !== 0) {
      writer.uint32(32).uint32(message.oseq);
    }

    if (message.state !== "") {
      writer.uint32(42).string(message.state);
    }

    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseOrderFilters();

    while (reader.pos < end) {
      var tag = reader.uint32();

      switch (tag >>> 3) {
        case 1:
          message.owner = reader.string();
          break;

        case 2:
          message.dseq = reader.uint64();
          break;

        case 3:
          message.gseq = reader.uint32();
          break;

        case 4:
          message.oseq = reader.uint32();
          break;

        case 5:
          message.state = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  },
  fromJSON: function fromJSON(object) {
    return {
      owner: (0, _helpers.isSet)(object.owner) ? String(object.owner) : "",
      dseq: (0, _helpers.isSet)(object.dseq) ? _helpers.Long.fromString(object.dseq) : _helpers.Long.UZERO,
      gseq: (0, _helpers.isSet)(object.gseq) ? Number(object.gseq) : 0,
      oseq: (0, _helpers.isSet)(object.oseq) ? Number(object.oseq) : 0,
      state: (0, _helpers.isSet)(object.state) ? String(object.state) : ""
    };
  },
  toJSON: function toJSON(message) {
    var obj = {};
    message.owner !== undefined && (obj.owner = message.owner);
    message.dseq !== undefined && (obj.dseq = (message.dseq || _helpers.Long.UZERO).toString());
    message.gseq !== undefined && (obj.gseq = Math.round(message.gseq));
    message.oseq !== undefined && (obj.oseq = Math.round(message.oseq));
    message.state !== undefined && (obj.state = message.state);
    return obj;
  },
  fromPartial: function fromPartial(object) {
    var _object$owner2, _object$gseq2, _object$oseq2, _object$state2;

    var message = createBaseOrderFilters();
    message.owner = (_object$owner2 = object.owner) !== null && _object$owner2 !== void 0 ? _object$owner2 : "";
    message.dseq = object.dseq !== undefined && object.dseq !== null ? _helpers.Long.fromValue(object.dseq) : _helpers.Long.UZERO;
    message.gseq = (_object$gseq2 = object.gseq) !== null && _object$gseq2 !== void 0 ? _object$gseq2 : 0;
    message.oseq = (_object$oseq2 = object.oseq) !== null && _object$oseq2 !== void 0 ? _object$oseq2 : 0;
    message.state = (_object$state2 = object.state) !== null && _object$state2 !== void 0 ? _object$state2 : "";
    return message;
  }
};
exports.OrderFilters = OrderFilters;