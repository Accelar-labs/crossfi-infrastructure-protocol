"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _testUtils = require("../../test-utils");

var _client = require("./client");

var _generator = _interopRequireDefault(require("@babel/generator"));

var expectCode = function expectCode(ast) {
  expect((0, _generator["default"])(ast).code).toMatchSnapshot();
};

var printCode = function printCode(ast) {
  console.log((0, _generator["default"])(ast).code);
};

it('createClient', /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee() {
  var context;
  return _regenerator["default"].wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          context = (0, _testUtils.getGenericParseContext)();
          expectCode((0, _client.createClient)({
            context: context,
            name: 'getSigningOsmosisClient',
            registries: ['osmosis.gamm.v1beta1', 'osmosis.superfluid.v1beta1', 'osmosis.lockup'],
            aminos: ['osmosis.gamm.v1beta1', 'osmosis.superfluid.v1beta1', 'osmosis.lockup']
          }));
          expect(context.utils).toMatchSnapshot();

        case 3:
        case "end":
          return _context.stop();
      }
    }
  }, _callee);
})));